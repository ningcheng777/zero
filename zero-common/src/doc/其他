1.类加载
时机
new
反射
父类
静态方法，字段
main方法
过程 加载->验证->准备->解析->初始化
类别 bootrap ext app

2.线程状态
开始，就绪，运行，阻塞，等待，结束

3.基本数据类型大小（单位字节）
boolean 1, byte 1, char 2, int 4, float 4, long 8, double 8
对象基本大小 16 包括8mark区（哈希码（HashCode）、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳等）和8类型指针
,指针大小 8，对象总大小会填充8的倍数（64位机器）

4.数组对象本质上就是长度字段4字节，16字节基础大小，和具体数组值

5.String对象本质是个数组和3个4长度的字段：起始位置偏移量，长度，散列值

6.死锁
互斥条件：资源是独占的且排他使用，进程互斥使用资源，即任意时刻一个资源只能给一个进程使用，其他进程若申请一个资源，而该资源被另一进程占有时，则申请者等待直到资源被占有者释放。
不可剥夺条件：进程所获得的资源在未使用完毕之前，不被其他进程强行剥夺，而只能由获得该资源的进程资源释放。
请求和保持条件：进程每次申请它所需要的一部分资源，在申请新的资源的同时，继续占用已分配到的资源。
循环等待条件
解决，加锁顺序，加锁时限

7.stringbuilder非并发的 Stringbuffer并发的

8.tcp参数

9.事务隔离级别
读未提交         能读到其他事务未提交的修改
不可重复读      在一个事务内能读到其他事务提交的修改，应该不变
可重复读           在一个事务内能读到其他事务提交的增删，应该不变或者叫幻读
串行化

10.currenthashmap
批量操作，不是原子的，所以在另一个线程查询时可能不准

11.lucene

12.genericObjectPool2对象池
minIdle 定时清理时判断
maxIdle return时判断
minEvictableIdleTime 对象的最大idle时间，超过了直接强制清除
softminEvictableIdleTime 只有大于minIdle时且超过此时间才清理

13.上传声音流程
1.验证声音信息
2.根据上传信息获得token和分块上传策略
3.分块上传文件，并获得块id，上传块文件暂存在服务器，没有直接到fdfs，并做缓存，上传重试时会用到
4.提交所有块信息，并合并所有块，最后上传至fdfs
5.用shell脚本调用第三方的ff开源声音处理和分析软件，获得码率和声音质量等信息，返回给前台

14.jvm参数
Xms 初始内存
xmx 最大内存
Xmn 年轻带内存
Xss 每个线程栈内存
XX:SurvivorRatio  eden 内存占比（10分之几）
XX:MaxTenuringThreshold 晋升年龄
-XX:+PrintGCDetails
Cms
-XX:+UseParNewGc -XX:+UseConcMarkSweepGC
-verbose:gc查看gc参数

15.webAsyncTask

16.docker命令
三种启动方式
  1.单次任务，执行完关闭docker container run image名称 命令
  2.命令行交互，交互完关闭docker container run —interactive —tty —rm image名称 命令（bash）
  3.后台一直运行 docker container run —detach  --publish 主机端口:容器端口 —name 容器名称 -e 环境变量设置（MYSQL_ROOT_PASSWORD=my-secret-pw）image名称
  4.查看docker容器列表 docker container ls (—all)
  5.日志  docker container logs container名称
  6.执行命令 docker exec -it 容器名称 命令
  7.dockerfile
    1.from
    2.copy
    3.expose
    4.cmd
  8.—mount type=bind,source=“${pwd}”
  9.docker (image) build —tag image名称:版本 .
  10.docker image ls

17.在linux中，&和&&,|和||介绍如下：

&  表示任务在后台执行，如要在后台运行redis-server,则有  redis-server &

&& 表示前一条命令执行成功时，才执行后一条命令 ，如 echo '1‘ && echo '2'

| 表示管道，上一条命令的输出，作为下一条命令参数，如 echo 'yes' | wc -l

|| 表示上一条命令执行失败后，才执行下一条命令，如 cat nofile || echo “fail"
Ln命令

18.maven依赖优先级
  1.路径最短
  2.声明顺序靠前的优先极高

19.git
git reset --hard 恢复到最后一个提交的版本，即删除所有未提交的修改

20.mysql 做join时，可以先做where子查询再join，可是要注意子查询结果不能太多，因为子查询没有索引，on里面多个条件，对左边表没用，支队右边表筛选

21.drools mvel

22.spring
beanPostProcessor
commandLineRunner
applicationListener

23.kafka
auto.offset.reset默认latest

connectionTimeout="30000"
redirectPort="8443"
maxThreads="600" acceptCount="800"/>
maxThreads：tomcat起动的最大线程数，即同时处理的任务个数，默认值为200
acceptCount：当tomcat起动的线程数达到最大时，接受排队的请求个数，默认值为100
24

mvn -pl -am
25
被动回收，get时检查过期时间
主动回收，1秒10次定时任务，随机抽20个记录，回收过期的，一直循环知道过期熟练小于25%,或者超时

26
MySQL中explain的type类型
|  ALL              |  全表扫描

|  index            |  索引全扫描

|  range            |  索引范围扫描，常用语<,<=,>=,between等操作

|  ref                |  使用非唯一索引扫描或唯一索引前缀扫描，返回单条记录，常出现在关联查询中

|  eq_ref           |  类似ref，区别在于使用的是唯一索引，使用主键的关联查询

|  const/system  |  单条记录，系统会把匹配行中的其他列作为常数处理，如主键或唯一索引查询

|  null                |  MySQL不访问任何表或索引，直接返回结果


