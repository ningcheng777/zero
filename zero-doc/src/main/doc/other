1.死锁
互斥条件：资源是独占的且排他使用，进程互斥使用资源，即任意时刻一个资源只能给一个进程使用，其他进程若申请一个资源，而该资源被另一进程占有时，则申请者等待直到资源被占有者释放。
不可剥夺条件：进程所获得的资源在未使用完毕之前，不被其他进程强行剥夺，而只能由获得该资源的进程资源释放。
请求和保持条件：进程每次申请它所需要的一部分资源，在申请新的资源的同时，继续占用已分配到的资源。
循环等待条件
解决，加锁顺序，加锁时限

2.genericObjectPool2对象池
minIdle 定时清理时判断
maxIdle return时判断
minEvictableIdleTime 对象的最大idle时间，超过了直接强制清除
softminEvictableIdleTime 只有大于minIdle时且超过此时间才清理

3.上传声音流程
1.验证声音信息
2.根据上传信息获得token和分块上传策略
3.分块上传文件，并获得块id，上传块文件暂存在服务器，没有直接到fdfs，并做缓存，上传重试时会用到
4.提交所有块信息，并合并所有块，最后上传至fdfs
5.用shell脚本调用第三方的ff开源声音处理和分析软件，获得码率和声音质量等信息，返回给前台

4.maven依赖优先级
  1.路径最短
  2.声明顺序靠前的优先极高

5.mvn -pl -am

6.git
git reset --hard xxx 恢复到最后一个提交的版本，即删除所有未提交的修改

7.tomcat参数
connectionTimeout="30000"
redirectPort="8443"
maxThreads="600" acceptCount="800"/>
maxThreads：tomcat起动的最大线程数，即同时处理的任务个数，默认值为200
acceptCount：当tomcat起动的线程数达到最大时，接受排队的请求个数，默认值为100

